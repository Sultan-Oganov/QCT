name: Deploy to Dev

on:
  push:
    branches:
      - 'main'
      - 'dev'
      - 'devops'
  pull_request:

env:
  REGISTRY: "registry.digitalocean.com/qctoken"
  IMAGE_NAME: "platform/qfe-core"

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    name: Deploy to Dev
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref || github.ref_name }}
      - uses: pnpm/action-setup@v2.0.1
        with:
          version: 7.0.0
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: pnpm install
      - name: Build web-story & web
        run: |
          cd packages/web-story
          pnpm run build
          cd ../web
          pnpm run build
      - name: Save artifacts for build image
        uses: actions/upload-artifact@v3
        with:
          name: web-build
          path: |
            packages/web/dist
            configs
            Dockerfile
      - id: branch_name
        uses: ASzc/change-string-case-action@v2
        with:
          string: ${{ github.head_ref || github.ref_name }}
      - name: Deploy to Server (Web-Story)
        uses: easingthemes/ssh-deploy@main
        env:
            SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
            ARGS: "-rltgoDzvO --delete"
            SOURCE: "packages/web-story/dist/"
            REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
            REMOTE_USER: ${{ secrets.REMOTE_USER }}
            TARGET: /var/www/html/web-story/${{ steps.branch_name.outputs.lowercase }}

      - name: Deploy to Server (Web)
        uses: easingthemes/ssh-deploy@main
        env:
            SSH_PRIVATE_KEY: ${{ secrets.SERVER_SSH_KEY }}
            ARGS: "-rltgoDzvO --delete"
            SOURCE: "packages/web/dist/"
            REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
            REMOTE_USER: ${{ secrets.REMOTE_USER }}
            TARGET: /var/www/html/web/${{ steps.branch_name.outputs.lowercase }}
            EXCLUDE: "/dist/, /node_modules/"

  build_and_upload_image:
    runs-on: ubuntu-latest
    needs: build_and_deploy
    name: Builder image and upload into registry
    if: ${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev' || github.ref == 'refs/heads/devops' }}


    steps:
      - name: Download web-build
        uses: actions/download-artifact@v3
        with:
          name: web-build

      - name: SetUp tags
        run: |
          echo "TAG_SHA=$(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7 )" >> $GITHUB_ENV
          echo "TAG_BRANCH=$(echo $REGISTRY)/$(echo $IMAGE_NAME):${{ github.head_ref || github.ref_name }}" >> $GITHUB_ENV

      - name: Build container image
        run: docker build -t $(echo $TAG_SHA) -t $(echo $TAG_BRANCH) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
            token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: |
          docker push $(echo $TAG_SHA)
          docker push $(echo $TAG_BRANCH)
