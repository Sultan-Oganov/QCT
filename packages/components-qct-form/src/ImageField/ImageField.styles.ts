import { makeStyles } from '@qctoken/theme';

export const useStyles = makeStyles((theme, bc) => ({
  root: {
    display: 'flex',
    width: '100%',
    minWidth: 0,
    flexDirection: 'column',
  },
  input: {
    display: 'none',
  },
  imgFill: {
    position: 'relative',
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: 16,
    border: `2px dashed ${theme.colors.common.stroke}`,
    padding: theme.spacing(4),
    textAlign: 'center',
    width: '100%',
    boxSizing: 'border-box',
    height: bc.height,
  },
  closeBtn: {
    boxSizing: 'border-box',
    width: 35,
    height: 35,
    border: 'none',
    background: theme.colors.common.white,
    borderRadius: 50,
    padding: theme.spacing(2),
    margin: 0,
    cursor: 'pointer',
    position: 'absolute',
    right: 8,
    top: 8,
    zIndex: 10,
  },
  image: {
    width: '100%',
    height: '100%',
    objectFit: 'contain',
  },
  label: {
    display: 'flex',
    flexDirection: 'column',
    justifyContent: 'center',
    alignItems: 'center',
    borderRadius: 16,
    border: `2px dashed ${theme.colors.common.stroke}`,
    textAlign: 'center',
    cursor: 'pointer',
    width: '100%',
    boxSizing: 'border-box',
    padding: theme.spacing(bc.spacing),
    minHeight: bc.height,
  },
  label_text: {
    ...theme.typography.regular,
    color: theme.colors.text.disabled,
  },
  labelButton: {
    width: '100%',
    maxWidth: '100%',
    padding: theme.spacing(4.5, 0),
    borderRadius: 16,
    fontWeight: 500,
    display: 'grid',
    placeItems: 'center',
    gap: 12,
    cursor: 'pointer',
    backgroundColor: theme.colors.primary.main,
    color: theme.colors.common.white,
    border: 'none',
    outline: 'none',
  },
  labelText: {
    ...theme.typography.regular,
    color: theme.colors.disabled.text,
    margin: theme.spacing(4, 0, 0, 0),
  },
  errorText: {
    ...theme.typography.error,
    minHeight: 24,
    height: 24,
    whiteSpace: 'nowrap',
    overflow: 'hidden',
    textOverflow: 'ellipsis',
    padding: theme.spacing(0, 0, 0, 3),
    boxSizing: 'border-box',
  },
  canvas: {
    display: 'none',
  },
  crop: {
    width: '100%',
  },
}));
